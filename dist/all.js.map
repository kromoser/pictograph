{"version":3,"sources":["csv.js"],"names":["createList","graphContainer","document","querySelector","d3","csv","then","data","console","log","columnOne","columns","columnTwo","reducer","accumulator","currentValue","parseInt","totalCount","reduce","forEach","element","node","createElement","text","createTextNode","appendChild"],"mappings":";;AAGA,SAASA,UAAT,GAAsB;AAEpB,MAAMC,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAvB,CAFoB,CAIpB;;AACAC,EAAAA,EAAE,CAACC,GAAH,CAAO,mBAAP,EAA4BC,IAA5B,CAAiC,UAASC,IAAT,EAAe;AAE9CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,QAAMG,SAAS,GAAGH,IAAI,CAACI,OAAL,CAAa,CAAb,CAAlB;AACA,QAAMC,SAAS,GAAGL,IAAI,CAACI,OAAL,CAAa,CAAb,CAAlB,CAL8C,CAQ9C;;AACA,QAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,WAAD,EAAcC,YAAd;AAAA,aAA+BD,WAAW,GAAGE,QAAQ,CAACD,YAAY,CAACH,SAAD,CAAb,CAArD;AAAA,KAAhB;;AACA,QAAMK,UAAU,GAAGV,IAAI,CAACW,MAAL,CAAYL,OAAZ,EAAoB,CAApB,CAAnB;AAEAN,IAAAA,IAAI,CAACY,OAAL,CAAa,UAASC,OAAT,EAAkB;AAC7B,UAAMC,IAAI,GAAGnB,QAAQ,CAACoB,aAAT,CAAuB,IAAvB,CAAb,CAD6B,CAE7B;;AACA,UAAMC,IAAI,GAAGrB,QAAQ,CAACsB,cAAT,CAAwBJ,OAAO,CAACV,SAAD,CAAP,GAAqB,IAArB,GAA6BM,QAAQ,CAACI,OAAO,CAACR,SAAD,CAAR,CAAR,GAA6BK,UAA7B,GAA0C,EAAvE,GAA6E,WAA7E,GAA2FG,OAAO,CAACR,SAAD,CAAlG,GAAgH,GAAhH,GAAsHK,UAAtH,GAAmI,GAA3J,CAAb;AACAI,MAAAA,IAAI,CAACI,WAAL,CAAiBF,IAAjB;AACAtB,MAAAA,cAAc,CAACwB,WAAf,CAA2BJ,IAA3B;AACD,KAND;AAQAb,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACW,MAAL,CAAYL,OAAZ,EAAoB,CAApB,CAAZ;AACD,GArBD;AAsBD","file":"all.js","sourcesContent":["\n\n\nfunction createList() {\n\n  const graphContainer = document.querySelector('#vis-container');\n\n  // Take CSV, split into row objects, and push them into array\n  d3.csv('/app/csv/test.csv').then(function(data) {\n\n    console.log(data);\n\n    const columnOne = data.columns[0];\n    const columnTwo = data.columns[1];\n\n\n    // Get total counts from column two for use in percentages\n    const reducer = (accumulator, currentValue) => accumulator + parseInt(currentValue[columnTwo])\n    const totalCount = data.reduce(reducer,0);\n\n    data.forEach(function(element) {\n      const node = document.createElement('LI');\n      // Get each value to be normalized to a distribution between 1 and 10\n      const text = document.createTextNode(element[columnOne] + ': ' + (parseInt(element[columnTwo])/totalCount * 10) + ' (Totals:' + element[columnTwo] + '/' + totalCount + ')');\n      node.appendChild(text);\n      graphContainer.appendChild(node)\n    });\n\n    console.log(data.reduce(reducer,0));\n  });\n}\n"]}